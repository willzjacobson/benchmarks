<?xml version="1.0" encoding="UTF-8"?>
<xsd:schema targetNamespace="http://commons.fin-sif.com/types"
			xmlns:tns="http://commons.fin-sif.com/types"
			xmlns:xsd="http://www.w3.org/2001/XMLSchema"
			elementFormDefault="qualified">

	<!-- Date and Time convention: xsd:dateTime follows the ISO 8601 standard -->
	<!-- and is LOCALTIME in particular the format is YYYY-MM-DDThh:mm:ss.nnn where -->
	<!-- nnn are milliseconds here is an example: 2012-10-05T11:15:56.783 -->


	<!-- Boolean definition as one char string allowing only 0 for false and 1 for true -->
	<xsd:simpleType name="boolType">
		<xsd:restriction base="xsd:string">
			<xsd:length value="1"/>
			<xsd:enumeration value="0"/>
			<xsd:enumeration value="1"/>
		</xsd:restriction>
	</xsd:simpleType>

	<!-- qualityType definition -->
	<xsd:complexType name="qualityType">
		<!-- signal received from adapter in realtime (1) or as storical (0) -->
		<xsd:attribute name="realtime" type="tns:boolType" use="required"/>
		<!-- signal received by adapter from its managed system with bad quality (1) or -->
		<!-- good quality (0) the absence of this data is considered as good quality (0) -->
		<xsd:attribute name="bad" type="tns:boolType" default="0"/>
	</xsd:complexType>

	<!-- localeType definition (known languages) -->
	<xsd:simpleType name="localeType">
		<xsd:restriction base="xsd:byte">
			<!-- italiano -->
			<xsd:minInclusive value="0"/>
			<!-- inglese -->
			<xsd:maxInclusive value="1"/>
		</xsd:restriction>
	</xsd:simpleType>

	<!-- localizedNameType definition is composed by: the language (lang) the description (value) -->
	<xsd:complexType name="localizedNameType">
		<xsd:attribute name="lang" type="tns:localeType" use="required"/>
		<xsd:attribute name="value" type="xsd:string" use="required"/>
	</xsd:complexType>

	<!-- list of localized names -->
	<xsd:complexType name="localizedNameListType">
		<xsd:sequence>
			<xsd:element name="name" type="tns:localizedNameType" maxOccurs="unbounded"/>
		</xsd:sequence>
	</xsd:complexType>

	<!-- PBS restriction (30 characters) -->
	<xsd:simpleType name="PBSType30">
		<xsd:restriction base="xsd:string">
			<xsd:length value="30"/>
		</xsd:restriction>
	</xsd:simpleType>

	<!-- PBS definition -->
	<xsd:complexType name="PBSType">
		<xsd:simpleContent>
			<xsd:extension base="tns:PBSType30">
				<xsd:attribute name="a1" type="xsd:string" use="required"/>
				<xsd:attribute name="a2" type="xsd:string" use="required"/>
				<xsd:attribute name="a3" type="xsd:string" use="required"/>
				<xsd:attribute name="a4" type="xsd:string" use="required"/>
				<!-- technology -->
				<xsd:attribute name="t" type="xsd:string" use="required"/>
				<!-- system -->
				<xsd:attribute name="s" type="xsd:string" use="required"/>
				<!-- level1 equipment -->
				<xsd:attribute name="l1" type="xsd:string" use="required"/>
				<!-- level2 equipment -->
				<xsd:attribute name="l2" type="xsd:string" use="required"/>
				<!-- level3 equipment -->
				<xsd:attribute name="l3" type="xsd:string" use="required"/>
				<!-- progressive of equipment -->
				<xsd:attribute name="n" type="xsd:string" use="required"/>
				<!-- native PBS -->
				<xsd:attribute name="native" type="xsd:string"/>
			</xsd:extension>
		</xsd:simpleContent>
	</xsd:complexType>

	<!-- signType definition is composed by code and progressive -->
	<xsd:complexType name="signType">
		<xsd:attribute name="code" type="xsd:string" use="required"/>
		<xsd:attribute name="prog" type="xsd:string" use="required"/>
	</xsd:complexType>

	<!-- mobileType definition is composed by TID, CB and DID -->
	<xsd:complexType name="mobileType">
		<xsd:attribute name="TID" type="xsd:string" use="required"/>
		<xsd:attribute name="CB" type="xsd:string"/>
		<xsd:attribute name="DID" type="xsd:string"/>
	</xsd:complexType>




	<!-- ALARM SPECIFIC DEFINITIONS -->

	<!-- alarmPriorityType definition with priority allowed values -->
	<xsd:simpleType name="alarmPriorityType">
		<xsd:restriction base="xsd:byte">
			<!-- higher -->
			<xsd:minInclusive value="1"/>
			<!-- lower -->
			<xsd:maxInclusive value="5"/>
		</xsd:restriction>
	</xsd:simpleType>

	<!-- alarmPropertyType definition -->
	<xsd:complexType name="alarmPropertyType">
		<!-- alarm priority -->
		<xsd:attribute name="prio" type="tns:alarmPriorityType" use="required"/>
		<!-- alarm internal (1) indicator; the absence of this data is considered as 0 -->
		<xsd:attribute name="internal" type="tns:boolType" default="0"/>
		<!-- alarm OFF autogenerated by adapter (1) and not by the managed system (0); -->
		<!-- the absence of this data is considered as 0 -->
		<xsd:attribute name="autogen" type="tns:boolType" default="0"/>
	</xsd:complexType>

	<!-- alarmDetailTypedefinition -->
	<xsd:complexType name="alarmDetailType">
		<!-- If the alarm is caused by a wrong value, such value is -->
		<!-- reported here with low and high threshold as attributes -->
		<xsd:simpleContent>
			<xsd:extension base="xsd:float">
				<xsd:attribute name="lowTh" type="xsd:float"/>
				<xsd:attribute name="highTh" type="xsd:float"/>
			</xsd:extension>
		</xsd:simpleContent>
	</xsd:complexType>

	<xsd:simpleType name="alarmStateType">
		<!-- The alarm state. For alarm without acknowledge only states 0 and 3 are used -->
		<xsd:restriction base="xsd:byte">
			<!-- ACTIVE_NO_ACK -->
			<xsd:enumeration value="3"/>
			<!-- INACTIVE_NO_ACK -->
			<xsd:enumeration value="2"/>
			<!-- ACTIVE_WITH_ACK -->
			<xsd:enumeration value="1"/>
			<!-- INACTIVE -->
			<xsd:enumeration value="0"/>
		</xsd:restriction>
	</xsd:simpleType>

	<!-- alarmLobType definition (information not relational shredded on database): alarm -->
	<!-- details, pbs description, signal description and backpack for auxiliary info -->
	<xsd:complexType name="alarmLobType">
		<xsd:sequence>
			<xsd:element name="detail" type="tns:alarmDetailType" minOccurs="0"/>
			<xsd:element name="pbs" type="tns:localizedNameListType" minOccurs="0"/>
			<xsd:element name="sign" type="tns:localizedNameListType" minOccurs="0"/>
			<xsd:element name="bp" type="xsd:string" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>



	<!-- alarmType definition -->
	<xsd:complexType name="alarmType">
		<xsd:sequence>
			<!-- quality -->
			<xsd:element name="quality" type="tns:qualityType"/>
			<!-- alarm istance current step timestamp -->
			<xsd:element name="ts" type="xsd:dateTime"/>
			<!-- pbs -->
			<xsd:element name="pbs" type="tns:PBSType"/>
			<!-- signal -->
			<xsd:element name="sign" type="tns:signType"/>
			<!-- mobile info -->
			<xsd:element name="mobile" type="tns:mobileType" minOccurs="0"/>
			<!-- adapter/system sender -->
			<xsd:element name="sender" type="xsd:string"/>
			<!-- alarm instance state -->
			<xsd:element name="state" type="tns:alarmStateType"/>
			<!-- property -->
			<xsd:element name="property" type="tns:alarmPropertyType"/>
			<!-- alarm istance ON timestamp -->
			<xsd:element name="initTs" type="xsd:dateTime"/>
			<!-- alarm istance ACK timestamp -->
			<xsd:element name="ackTs" type="xsd:dateTime" minOccurs="0"/>
			<!-- alarm istance OFF timestamp -->
			<xsd:element name="normTs" type="xsd:dateTime" minOccurs="0"/>
			<!-- acking operator, role, console -->
			<xsd:element name="operator" type="xsd:string" minOccurs="0"/>
			<xsd:element name="role" type="xsd:string" minOccurs="0"/>
			<xsd:element name="console" type="xsd:string" minOccurs="0"/>
			<!-- data base unshredded information -->
			<xsd:element name="lob" type="tns:alarmLobType" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>



	<xsd:element name="alarm" type="tns:alarmType"/>

</xsd:schema>
