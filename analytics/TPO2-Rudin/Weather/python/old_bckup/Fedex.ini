; Main configuration file for Columbia-GE Fedex project software
; Module-specific sections override the default section, and command-line
; flags override both
; Leading and trailing spaces stripped from keys and values
; Refer to another key's value with '%(key)s'
; Leave value blank for None value
; Contact a developer if you need literal '%' characters in your value

;NOTE**** 
;for convience paths use / to be more compatiable if needed to move to a unix friendly box. 
;These get translated in the right way for windows.
;********

;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;; Default Settings ;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;

[DEFAULT]

;This feature is not used now.
;running_at = coned
running_at = ccls

;;;; Non-relative locations ;;;;

; root of installation.  Should have subdirs feeders, control, data, etc.
base_dir = C:/FedEx/App


; base directory for web-accessible directories
web_base_dir = %(base_dir)s/data

; program locations for use elsewhere
perl_prog = c:/Perl/bin/perl.exe
;perl_prog = /usr/bin/perl
python_prog = C:/Python27/python.exe


;;;; other locations ;;;;

; default destination for temporary files
temp_dir = %(base_dir)s/Temp

; source of static data and default dest of new models
data_dir = %(base_dir)s/data

; location of static data sources
data_sources_dir = %(base_dir)s/Data-Sources


; directory for control scripts
control_dir = %(base_dir)s/control

; default destination for logs
log_dir = %(base_dir)s/log


;;;; commands ;;;;

ml_dir = %(base_dir)s/ML

;directory for Support Vector Machine programs
; use this if you like to locate the svm library in the ML directory in the base directory of FedEx
;svm_dir = %(ml_dir)s/libsvm-3.14
; use this if you like to locate the svm library on the C (or other) drive directly
svm_dir = c:/libsvm-3.14
;Support Vector Machine format conversion program
svm_uci = %(svm_dir)s/uci2svml_reg.pl
;Support Vector Machine data normalization program
svm_scale = %(svm_dir)s/windows/svm-scale
;Support Vector Machine prediction program
svm_predict = %(svm_dir)s/svm-rank
;Support Vector Machine training program
svm_train = %(svm_dir)s/svm-train
;Support Vector Machine weight extraction program
svm_weight = %(svm_dir)s/svm-weight


;;;; logging configuration ;;;;

; if non-zero, calling app has already configured logger
logger_configured = 0

; $ will be replaced with % before assignment in application code
log_fmt = $(levelname)5s $(module)7s $(asctime)s: $(message)s

; top level threshold
log_level = INFO

; set true to add stderr as a log device
log_console = 1

; Severity threshold for console logging
; Choose from 'CRITICAL', 'ERROR', 'WARN', 'WARNING', 
;   'INFO', 'DEBUG', 'NOTSET'
log_console_level = INFO

; message format for console
log_console_msg_fmt = %(log_fmt)s

; set true to add a rotating file as a log device
log_file = 1

; severity threshold for file logging
; Choose from 'CRITICAL', 'ERROR', 'WARN', 'WARNING', 
;   'INFO', 'DEBUG', 'NOTSET'
log_file_level = INFO

; message format for log file
log_file_msg_fmt = %(log_fmt)s

; dir for log file
log_file_dir = %(log_dir)s

; mode for log file, w or a (write or append)
log_file_mode = a

; max size for log file before rotation
log_file_maxbytes = 5000000

; if non-zero, number of old logs to keep
log_file_backup_count = 5

;;;; misc ;;;;

; if non-zero, run in module-defined test mode
test = 0

; if non-zero, run in module-defined debug mode
debug = 0


;;;;;;;;;;;;;;;;;;;;;;;;
;;;; Module Configs ;;;;
;;;;;;;;;;;;;;;;;;;;;;;;


;[dbcleanuptest]

; verbose unit testing - Verbose output
;verbose =

; quiet unit testing - Minimal output
;quiet =

; change the log_console_level to allow clearer verbose testing
;log_console_level = CRITICAL

[wxobs]
driver = {SQL Server Native Client 10.0}
;driver = {SQL Native Client}
server = joule.ldeo.columbia.edu
database = GE
UID = FedEx_db
PWD = fedex_trucks
table = Weather_raw
;table = Weather_test
;get your own key from http://api.wunderground.com/api/
api_key = 1addc4d75f3b92bc
location = NY/New_York
;Delta in days to truncate before adding
delta = 0
;start populating for the last entry datetime if latest is used. 
;If a date specified, will start from that date.
start = latest
;start = 2012-10-16

[wxfcst]
driver = {SQL Server Native Client 10.0}
;driver = {SQL Native Client}
server = joule.ldeo.columbia.edu
database = GE
UID = FedEx_db
PWD = fedex_trucks
table = Weather_forecast
;table = Weather_tst
;get your own key from http://api.wunderground.com/api/
api_key = 919d8958896c7e4e
location = NY/New_York

[calc_mapes]
driver = {SQL Server Native Client 10.0}
;driver = {SQL Native Client}
server = joule.ldeo.columbia.edu
database = GE
UID = FedEx_db
PWD = fedex_trucks
act_table = Building_Load
pred_table = Building_Load_Prediction
stats_table = Building_Load_Stats

[svm_building_load]
%configure directory
bld_svm_dir = %(base_dir)s/BuildingLoad/SVM

;For DEFAULT values, look in the module: input_parser.py
;Database tables
bld_load_table = Building_Load
;bld_load_table = net_building_load_clipped
bld_load_prediction_tbl = Building_Load_Prediction
bld_covs_tbl = Covariates
weather_raw_table = Weather_raw
weather_forecast_table = Weather_forecast
holiday_table = Holiday
;Database config

driver = {SQL Server Native Client 10.0}
;driver = {SQL Native Client}
db_url = joule.ldeo.columbia.edu
database = GE
UID = FedEx_db
PWD = fedex_trucks

;PrimaryConfig
IS_SOURCE_DB = 1 
PREDICT_TODAY =  1
RESULT_OUTPUT_DB = 1
PARAM_FROM_FILE = 1
#0: Output to DB      1: CSV  

;ConfigValues
; date format example: 1999-12-19 23:55
; this is the data point from which the prediction starts
prediction_date = 2012-11-18_00:00
;start_load_date = 2012-8-14
alpha = 0.95	
alpha2 = 0.68

;Csv
failover_filename = %(bld_svm_dir)s/Output/Failover_output.csv
bld_load_prediction_filename = %(bld_svm_dir)s/Output/bld_prediction.csv
covariates_bld_filename = %(bld_svm_dir)s/Output/Covariates_bld_new.csv
param_filename = %(bld_svm_dir)s/Data/params_recent.csv
param_output_filename  = %(bld_svm_dir)s/Output/params_op.csv
weather_filename = %(bld_svm_dir)s/Output/reg_wx.csv

;Grid search param config
init_bestmape = 10000
init_nextbestmape = 10000
cost_start = 5
cost_end = 14
gamma_start = -7
gamma_end = 2

[predict_charging_load]

; forecast granularity in minutes; this value is also used to discard input
; data to match the prediction granularity needed
forecast_granularity = 5

; this flag must be 0 for FedEx/GE
use_deseasonalized_load = 0

default_holiday_distance = 60

; smoothing interval in minutes
smoothing_interval = 15

db_driver = {SQL Server Native Client 10.0}
;db_driver = {SQL Native Client}

crg_db = GE_20121024
crg_db_server = joule.ldeo.columbia.edu

; weather related
weather_db = GE
weather_db_server = joule.ldeo.columbia.edu
; observed weather data table 
weather_table = Weather_raw
weather_forecast_table = Weather_Forecast

db_uid = FedEx_db
db_pwd = fedex_trucks

cross_valid_results_table = Charging_Model_RBF_Params

; results database
results_db = GE
results_db_server = joule.ldeo.columbia.edu
results_table = Charging_Load_Prediction

covariates_table = Charging_Model_Covariates

save_results = 1

; the suffixes must be distinct to avoid conficts
covariates_file_suffix = .txt
scaled_file_suffix = .scaled
csv_suffix = .csv

; whether charging load model is generated multiple times during the day
rolling_horizon_model = 1

score_table = Charging_Load_Stats

; holidays
;delivery_holidays_table = Fedex_Delivery_Holidays
;sale_holidays_table = Sale_Holidays

; failover predictions table
failover_predictions_table = Charging_Load_Prediction_Failover

